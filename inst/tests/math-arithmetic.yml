- add:
    mutate: fld_double + fld_integer
    filter: fld_double + fld_integer < 10
    summarise: sum(fld_double + fld_integer, na.rm=TRUE)
    group_by: fld_double + fld_integer
    arrange: fld_double + fld_integer
- subtract:
    mutate: fld_double - fld_integer
    filter: fld_double - fld_integer < 1
    summarise: sum(fld_double - fld_integer, na.rm=TRUE)
    group_by: fld_double - fld_integer
    arrange: fld_double - fld_integer
- multiply:
    mutate: fld_double * fld_integer
    filter: fld_double * fld_integer < 10
    summarise: sum(fld_double * fld_integer, na.rm=TRUE)
    group_by: fld_double * fld_integer
    arrange: fld_double * fld_integer
- divide:
    mutate: fld_double / fld_integer
    filter: fld_double / fld_integer < 10
    summarise: sum(fld_double / fld_integer, na.rm=TRUE)
    group_by: fld_double / fld_integer
    arrange: fld_double / fld_integer
- power:
    mutate: fld_double ^ fld_integer
    filter: fld_double ^ fld_integer < 10
    summarise: sum(fld_double ^ fld_integer, na.rm=TRUE)
    group_by: fld_double ^ fld_integer
    arrange: fld_double ^ fld_integer
- remainder:
    mutate: (2 * fld_integer) %% (fld_integer + 1)
    filter: (2 * fld_integer) %% (fld_integer + 1) < 5
    summarise: sum((2 * fld_integer) %% (fld_integer + 1), na.rm=TRUE)
    group_by: (2 * fld_integer) %% (fld_integer + 1)
    arrange: (2 * fld_integer) %% (fld_integer + 1)
